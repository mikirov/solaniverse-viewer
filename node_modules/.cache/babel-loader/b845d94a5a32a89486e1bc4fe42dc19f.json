{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateUnityInstanceParameters = void 0;\n/**\n * Generates the parameters for the Unity Instance based on the Unity Context\n * and Unity Props passed to the component.\n * @param unityContext The Unity Context\n * @param unityProps The Unity Props passed to the component\n * @returns A Unity Instance Parameters object\n */\n\nfunction generateUnityInstanceParameters(unityContext, unityProps) {\n  // Creation of an object with the parameters for the Unity Instance.\n  var unityInstanceParameters = __assign({}, unityContext.unityConfig); // Print and printErr event hooks will be intercepted in order to catch\n  // messages to the Unity Context.\n\n\n  unityInstanceParameters.print = function (message) {\n    unityContext.dispatchEvent(\"debug\", message);\n  };\n\n  unityInstanceParameters.printErr = function (error) {\n    unityContext.dispatchEvent(\"error\", error);\n  }; // Some preferences will be set based on props and context config.\n\n\n  if (unityProps.devicePixelRatio !== undefined) {\n    unityInstanceParameters.devicePixelRatio = unityProps.devicePixelRatio;\n  }\n\n  if (unityContext.unityConfig.webglContextAttributes !== undefined) {\n    unityInstanceParameters.webglContextAttributes = unityContext.unityConfig.webglContextAttributes;\n  }\n\n  if (unityProps.matchWebGLToCanvasSize !== undefined) {\n    unityInstanceParameters.matchWebGLToCanvasSize = unityProps.matchWebGLToCanvasSize;\n  }\n\n  return unityInstanceParameters;\n}\n\nexports.generateUnityInstanceParameters = generateUnityInstanceParameters;","map":{"version":3,"sources":["../../source/utils/generate-unity-instance-parameters.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAIA;;;;;;AAMG;;AACH,SAAgB,+BAAhB,CACE,YADF,EAEE,UAFF,EAEyB;AAEvB;AACA,MAAM,uBAAuB,GAAA,QAAA,CAAA,EAAA,EACxB,YAAY,CAAC,WADW,CAA7B,CAHuB,CAOvB;AACA;;;AACA,EAAA,uBAAuB,CAAC,KAAxB,GAAgC,UAAU,OAAV,EAAyB;AACvD,IAAA,YAAY,CAAC,aAAb,CAA2B,OAA3B,EAAoC,OAApC;AACD,GAFD;;AAGA,EAAA,uBAAuB,CAAC,QAAxB,GAAmC,UAAU,KAAV,EAAuB;AACxD,IAAA,YAAY,CAAC,aAAb,CAA2B,OAA3B,EAAoC,KAApC;AACD,GAFD,CAZuB,CAgBvB;;;AACA,MAAI,UAAU,CAAC,gBAAX,KAAgC,SAApC,EAA+C;AAC7C,IAAA,uBAAuB,CAAC,gBAAxB,GAA2C,UAAU,CAAC,gBAAtD;AACD;;AACD,MAAI,YAAY,CAAC,WAAb,CAAyB,sBAAzB,KAAoD,SAAxD,EAAmE;AACjE,IAAA,uBAAuB,CAAC,sBAAxB,GACE,YAAY,CAAC,WAAb,CAAyB,sBAD3B;AAED;;AACD,MAAI,UAAU,CAAC,sBAAX,KAAsC,SAA1C,EAAqD;AACnD,IAAA,uBAAuB,CAAC,sBAAxB,GACE,UAAU,CAAC,sBADb;AAED;;AAED,SAAO,uBAAP;AACD;;AAhCD,OAAA,CAAA,+BAAA,GAAA,+BAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.generateUnityInstanceParameters = void 0;\n/**\n * Generates the parameters for the Unity Instance based on the Unity Context\n * and Unity Props passed to the component.\n * @param unityContext The Unity Context\n * @param unityProps The Unity Props passed to the component\n * @returns A Unity Instance Parameters object\n */\nfunction generateUnityInstanceParameters(unityContext, unityProps) {\n    // Creation of an object with the parameters for the Unity Instance.\n    var unityInstanceParameters = __assign({}, unityContext.unityConfig);\n    // Print and printErr event hooks will be intercepted in order to catch\n    // messages to the Unity Context.\n    unityInstanceParameters.print = function (message) {\n        unityContext.dispatchEvent(\"debug\", message);\n    };\n    unityInstanceParameters.printErr = function (error) {\n        unityContext.dispatchEvent(\"error\", error);\n    };\n    // Some preferences will be set based on props and context config.\n    if (unityProps.devicePixelRatio !== undefined) {\n        unityInstanceParameters.devicePixelRatio = unityProps.devicePixelRatio;\n    }\n    if (unityContext.unityConfig.webglContextAttributes !== undefined) {\n        unityInstanceParameters.webglContextAttributes =\n            unityContext.unityConfig.webglContextAttributes;\n    }\n    if (unityProps.matchWebGLToCanvasSize !== undefined) {\n        unityInstanceParameters.matchWebGLToCanvasSize =\n            unityProps.matchWebGLToCanvasSize;\n    }\n    return unityInstanceParameters;\n}\nexports.generateUnityInstanceParameters = generateUnityInstanceParameters;\n//# sourceMappingURL=generate-unity-instance-parameters.js.map"]},"metadata":{},"sourceType":"script"}