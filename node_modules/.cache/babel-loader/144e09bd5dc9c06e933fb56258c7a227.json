{"ast":null,"code":"var _jsxFileName = \"/Users/misho/Repos/solaniverse-viewer/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Unity, { UnityContext } from \"react-unity-webgl\";\nimport Wallet from \"./components/Wallet/Wallet\";\nimport Player from \"./components/Player/Player\";\nimport LoadingScreen from \"./components/LoadingScreen/LoadingScreen\";\nimport styles from \"./App.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst unityContext = new UnityContext({\n  loaderUrl: \"Build/Build.loader.js\",\n  dataUrl: \"Build/Build.data\",\n  frameworkUrl: \"Build/Build.framework.js\",\n  codeUrl: \"Build/Build.wasm\",\n  companyName: \"Solverse\",\n  productName: \"Solverse\",\n  productVersion: \"0.1\"\n});\n\nfunction App() {\n  _s();\n\n  const [initialized, setInitialized] = useState(false);\n  useEffect(() => {\n    unityContext.on(\"SceneInitialized\", () => {\n      setInitialized(true);\n    });\n  }, []);\n\n  const GeneratePlanet = seed => {\n    unityContext.send(\"GameController\", \"GeneratePlanet\", seed);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(LoadingScreen, {\n      enabled: !initialized\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Wallet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Player, {\n      enabled: initialized,\n      url: \"background_audio.mp3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Unity, {\n      unityContext: unityContext,\n      tabIndex: 1,\n      className: styles.unity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"Kqi3FOcoZthoTYGDbMGQxPYNq5w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/misho/Repos/solaniverse-viewer/src/App.tsx"],"names":["React","useEffect","useState","Unity","UnityContext","Wallet","Player","LoadingScreen","styles","unityContext","loaderUrl","dataUrl","frameworkUrl","codeUrl","companyName","productName","productVersion","App","initialized","setInitialized","on","GeneratePlanet","seed","send","position","unity"],"mappings":";;;AAAA,OAAOA,KAAP,IAAkCC,SAAlC,EAA6CC,QAA7C,QAA4D,OAA5D;AACA,OAAOC,KAAP,IAAeC,YAAf,QAAkC,mBAAlC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAGA,MAAMC,YAAY,GAAG,IAAIL,YAAJ,CAAiB;AAClCM,EAAAA,SAAS,EAAE,uBADuB;AAElCC,EAAAA,OAAO,EAAE,kBAFyB;AAGlCC,EAAAA,YAAY,EAAE,0BAHoB;AAIlCC,EAAAA,OAAO,EAAE,kBAJyB;AAKlCC,EAAAA,WAAW,EAAE,UALqB;AAMlCC,EAAAA,WAAW,EAAE,UANqB;AAOlCC,EAAAA,cAAc,EAAE;AAPkB,CAAjB,CAArB;;AAUA,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,KAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,YAAY,CAACW,EAAb,CAAgB,kBAAhB,EAAoC,MAAM;AACtCD,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAME,cAAc,GAAIC,IAAD,IAAkB;AACrCb,IAAAA,YAAY,CAACc,IAAb,CAAkB,gBAAlB,EAAoC,gBAApC,EAAsDD,IAAtD;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACE,MAAAA,QAAQ,EAAE;AAAX,KAAZ;AAAA,4BACI,QAAC,aAAD;AAAe,MAAA,OAAO,EAAE,CAACN;AAAzB;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEA,WAAjB;AAA8B,MAAA,GAAG,EAAE;AAAnC;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI,QAAC,KAAD;AACI,MAAA,YAAY,EAAET,YADlB;AAEI,MAAA,QAAQ,EAAE,CAFd;AAGI,MAAA,SAAS,EAAED,MAAM,CAACiB;AAHtB;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GA3BQR,G;;KAAAA,G;AA6BT,eAAeA,GAAf","sourcesContent":["import React, {MouseEventHandler, useEffect, useState} from 'react';\nimport Unity, {UnityContext} from \"react-unity-webgl\";\nimport Wallet from \"./components/Wallet/Wallet\";\nimport Player from \"./components/Player/Player\";\nimport LoadingScreen from \"./components/LoadingScreen/LoadingScreen\";\nimport styles from \"./App.module.css\"\n\n\nconst unityContext = new UnityContext({\n    loaderUrl: \"Build/Build.loader.js\",\n    dataUrl: \"Build/Build.data\",\n    frameworkUrl: \"Build/Build.framework.js\",\n    codeUrl: \"Build/Build.wasm\",\n    companyName: \"Solverse\",\n    productName: \"Solverse\",\n    productVersion: \"0.1\",\n});\n\nfunction App() {\n\n    const [initialized, setInitialized] = useState(false);\n\n    useEffect(() => {\n        unityContext.on(\"SceneInitialized\", () => {\n            setInitialized(true);\n        });\n    }, []);\n\n    const GeneratePlanet = (seed: number) => {\n        unityContext.send(\"GameController\", \"GeneratePlanet\", seed);\n    }\n\n    return (\n        <div style={{position: \"relative\"}}>\n            <LoadingScreen enabled={!initialized}/>\n            {/*TODO: get the seed of the NFT and pass it to the method*/}\n            <Wallet/>\n            <Player enabled={initialized} url={\"background_audio.mp3\"}/>\n            <Unity\n                unityContext={unityContext}\n                tabIndex={1}\n                className={styles.unity}\n            />\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}