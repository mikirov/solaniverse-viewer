{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Unity = void 0;\n\nvar react_1 = require(\"react\");\n\nvar react_2 = require(\"react\");\n\nvar use_unity_instance_1 = require(\"../hooks/use-unity-instance\");\n\nvar use_unity_loader_1 = require(\"../hooks/use-unity-loader\");\n\nvar generate_unity_instance_parameters_1 = require(\"../utils/generate-unity-instance-parameters\");\n/**\n * A unique instance identifier for each mounted Unity Instance.\n */\n\n\nvar unityInstanceIdentifier = 0;\n/**\n * Renders the Unity Instance to the React DOM.\n * @param props Properties of the Unity Component.\n * @returns A React Element.\n */\n\nfunction Unity(props) {\n  var htmlCanvasElement = react_2.useRef(null);\n  var unityContext = react_2.useState(props.unityContext)[0];\n  var unityInstanceParameters = generate_unity_instance_parameters_1.generateUnityInstanceParameters(unityContext, props); // The Unity Loader is required for the unity instance to be created.\n\n  var unityLoaderStatus = use_unity_loader_1.useUnityLoader(unityContext.unityConfig.loaderUrl); // Creates the Unity Instance while defining a set of hooks which indicate\n  // whether the Unity Instance is ready to be used among with its progression.\n\n  var _a = use_unity_instance_1.useUnityInstance(unityLoaderStatus, htmlCanvasElement.current, unityInstanceParameters),\n      unityInstance = _a.unityInstance,\n      progression = _a.progression,\n      error = _a.error; // Effect hook will be called when the Unity instance changes.\n\n\n  react_2.useEffect(function () {\n    // If the Unity Instance has been defined, it will be passed to the\n    // Unity Context.\n    if (unityInstance !== null) {\n      unityContext.unityInstance = unityInstance;\n    }\n  }, [unityInstance]); // Effect hook will be called when the reference to the canvas changes.\n\n  react_2.useEffect(function () {\n    // Whether or not the canvas has been defined, it will be set as the\n    // current html canvas element on the Unity Context.\n    unityContext.htmlCanvasElement = htmlCanvasElement.current; // Only when it is defined, an event will be dispatched.\n\n    if (unityContext.htmlCanvasElement !== null) {\n      unityContext.dispatchEvent(\"canvas\", htmlCanvasElement.current);\n    }\n  }, [htmlCanvasElement]); // Effect hook will be called when the Unity Instance progession changes.\n\n  react_2.useEffect(function () {\n    // If the Unity Instance loading progression hits 1, then the Unity\n    // Instance is ready to be used and the loaded event is dispatched.\n    if (progression === 1) {\n      unityContext.dispatchEvent(\"loaded\");\n    } // Dispatches an event every time the Unity Instance progression changes.\n\n\n    unityContext.dispatchEvent(\"progress\", progression);\n  }, [progression]); // Effect hook will be called when the Unity Instance threw an error.\n\n  react_2.useEffect(function () {\n    // If the Unity Instance threw an error, then the error event is\n    // dispatched.\n    if (error !== null) {\n      unityContext.dispatchEvent(\"error\", error);\n    }\n  }, [error]); // Event hook will be called when the component mounts and unmounts.\n\n  react_2.useEffect(function () {\n    // Each time a component is mounted, the Unity Context identifier is\n    // incremented to ensure that each component is referenced correctly.\n    unityInstanceIdentifier++;\n    return function () {\n      // If the Unity Instance is defined, Quit will be invoked on the Unity\n      // Instance. This removes the Unity Loader and Framework from memory.\n      unityContext === null || unityContext === void 0 ? void 0 : unityContext.quitUnityInstance();\n    };\n  }, []); // Renders the actual canvas element which Unity will use to render.\n\n  return react_1.createElement(\"canvas\", {\n    // Unity 2021.2 and above requires a unique identifier for each canvas\n    // internally. This is not documented in the Unity documentation, but\n    // it is required for the canvas to be rendered. This is further explained\n    // in https://github.com/jeffreylanters/react-unity-webgl/issues/223.\n    id: \"unity-canvas-\" + unityInstanceIdentifier,\n    // A reference to the canvas element is required to create a Unity Instance.\n    ref: htmlCanvasElement,\n    // Push through of some properties.\n    className: props.className || undefined,\n    style: props.style || {},\n    tabIndex: props.tabIndex || undefined\n  });\n}\n\nexports.Unity = Unity;","map":{"version":3,"sources":["../../source/components/unity.ts"],"names":[],"mappings":";;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA;;AACA,IAAA,oBAAA,GAAA,OAAA,CAAA,6BAAA,CAAA;;AACA,IAAA,kBAAA,GAAA,OAAA,CAAA,2BAAA,CAAA;;AAGA,IAAA,oCAAA,GAAA,OAAA,CAAA,6CAAA,CAAA;AAEA;;AAEG;;;AACH,IAAI,uBAAuB,GAAW,CAAtC;AAEA;;;;AAIG;;AACH,SAAgB,KAAhB,CAAsB,KAAtB,EAAwC;AACtC,MAAM,iBAAiB,GAAG,OAAA,CAAA,MAAA,CAA0B,IAA1B,CAA1B;AACA,MAAM,YAAY,GAAG,OAAA,CAAA,QAAA,CAAuB,KAAK,CAAC,YAA7B,EAA2C,CAA3C,CAArB;AACA,MAAM,uBAAuB,GAAG,oCAAA,CAAA,+BAAA,CAC9B,YAD8B,EAE9B,KAF8B,CAAhC,CAHsC,CAQtC;;AACA,MAAM,iBAAiB,GAAG,kBAAA,CAAA,cAAA,CAAe,YAAY,CAAC,WAAb,CAAyB,SAAxC,CAA1B,CATsC,CAWtC;AACA;;AACM,MAAA,EAAA,GAAwC,oBAAA,CAAA,gBAAA,CAC5C,iBAD4C,EAE5C,iBAAiB,CAAC,OAF0B,EAG5C,uBAH4C,CAAxC;AAAA,MAAE,aAAa,GAAA,EAAA,CAAA,aAAf;AAAA,MAAiB,WAAW,GAAA,EAAA,CAAA,WAA5B;AAAA,MAA8B,KAAK,GAAA,EAAA,CAAA,KAAnC,CAbgC,CAmBtC;;;AACA,EAAA,OAAA,CAAA,SAAA,CACE,YAAA;AACE;AACA;AACA,QAAI,aAAa,KAAK,IAAtB,EAA4B;AAC1B,MAAA,YAAY,CAAC,aAAb,GAA6B,aAA7B;AACD;AACF,GAPH,EAQE,CAAC,aAAD,CARF,EApBsC,CA+BtC;;AACA,EAAA,OAAA,CAAA,SAAA,CACE,YAAA;AACE;AACA;AACA,IAAA,YAAY,CAAC,iBAAb,GAAiC,iBAAiB,CAAC,OAAnD,CAHF,CAIE;;AACA,QAAI,YAAY,CAAC,iBAAb,KAAmC,IAAvC,EAA6C;AAC3C,MAAA,YAAY,CAAC,aAAb,CAA2B,QAA3B,EAAqC,iBAAiB,CAAC,OAAvD;AACD;AACF,GATH,EAUE,CAAC,iBAAD,CAVF,EAhCsC,CA6CtC;;AACA,EAAA,OAAA,CAAA,SAAA,CACE,YAAA;AACE;AACA;AACA,QAAI,WAAW,KAAK,CAApB,EAAuB;AACrB,MAAA,YAAY,CAAC,aAAb,CAA2B,QAA3B;AACD,KALH,CAME;;;AACA,IAAA,YAAY,CAAC,aAAb,CAA2B,UAA3B,EAAuC,WAAvC;AACD,GATH,EAUE,CAAC,WAAD,CAVF,EA9CsC,CA2DtC;;AACA,EAAA,OAAA,CAAA,SAAA,CACE,YAAA;AACE;AACA;AACA,QAAI,KAAK,KAAK,IAAd,EAAoB;AAClB,MAAA,YAAY,CAAC,aAAb,CAA2B,OAA3B,EAAoC,KAApC;AACD;AACF,GAPH,EAQE,CAAC,KAAD,CARF,EA5DsC,CAuEtC;;AACA,EAAA,OAAA,CAAA,SAAA,CAAU,YAAA;AACR;AACA;AACA,IAAA,uBAAuB;AACvB,WAAO,YAAA;AACL;AACA;AACA,MAAA,YAAY,KAAA,IAAZ,IAAA,YAAY,KAAA,KAAA,CAAZ,GAAY,KAAA,CAAZ,GAAA,YAAY,CAAE,iBAAd,EAAA;AACD,KAJD;AAKD,GATD,EASG,EATH,EAxEsC,CAmFtC;;AACA,SAAO,OAAA,CAAA,aAAA,CAAc,QAAd,EAAwB;AAC7B;AACA;AACA;AACA;AACA,IAAA,EAAE,EAAE,kBAAgB,uBALS;AAM7B;AACA,IAAA,GAAG,EAAE,iBAPwB;AAQ7B;AACA,IAAA,SAAS,EAAE,KAAK,CAAC,SAAN,IAAmB,SATD;AAU7B,IAAA,KAAK,EAAE,KAAK,CAAC,KAAN,IAAe,EAVO;AAW7B,IAAA,QAAQ,EAAE,KAAK,CAAC,QAAN,IAAkB;AAXC,GAAxB,CAAP;AAaD;;AAjGD,OAAA,CAAA,KAAA,GAAA,KAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Unity = void 0;\nvar react_1 = require(\"react\");\nvar react_2 = require(\"react\");\nvar use_unity_instance_1 = require(\"../hooks/use-unity-instance\");\nvar use_unity_loader_1 = require(\"../hooks/use-unity-loader\");\nvar generate_unity_instance_parameters_1 = require(\"../utils/generate-unity-instance-parameters\");\n/**\n * A unique instance identifier for each mounted Unity Instance.\n */\nvar unityInstanceIdentifier = 0;\n/**\n * Renders the Unity Instance to the React DOM.\n * @param props Properties of the Unity Component.\n * @returns A React Element.\n */\nfunction Unity(props) {\n    var htmlCanvasElement = react_2.useRef(null);\n    var unityContext = react_2.useState(props.unityContext)[0];\n    var unityInstanceParameters = generate_unity_instance_parameters_1.generateUnityInstanceParameters(unityContext, props);\n    // The Unity Loader is required for the unity instance to be created.\n    var unityLoaderStatus = use_unity_loader_1.useUnityLoader(unityContext.unityConfig.loaderUrl);\n    // Creates the Unity Instance while defining a set of hooks which indicate\n    // whether the Unity Instance is ready to be used among with its progression.\n    var _a = use_unity_instance_1.useUnityInstance(unityLoaderStatus, htmlCanvasElement.current, unityInstanceParameters), unityInstance = _a.unityInstance, progression = _a.progression, error = _a.error;\n    // Effect hook will be called when the Unity instance changes.\n    react_2.useEffect(function () {\n        // If the Unity Instance has been defined, it will be passed to the\n        // Unity Context.\n        if (unityInstance !== null) {\n            unityContext.unityInstance = unityInstance;\n        }\n    }, [unityInstance]);\n    // Effect hook will be called when the reference to the canvas changes.\n    react_2.useEffect(function () {\n        // Whether or not the canvas has been defined, it will be set as the\n        // current html canvas element on the Unity Context.\n        unityContext.htmlCanvasElement = htmlCanvasElement.current;\n        // Only when it is defined, an event will be dispatched.\n        if (unityContext.htmlCanvasElement !== null) {\n            unityContext.dispatchEvent(\"canvas\", htmlCanvasElement.current);\n        }\n    }, [htmlCanvasElement]);\n    // Effect hook will be called when the Unity Instance progession changes.\n    react_2.useEffect(function () {\n        // If the Unity Instance loading progression hits 1, then the Unity\n        // Instance is ready to be used and the loaded event is dispatched.\n        if (progression === 1) {\n            unityContext.dispatchEvent(\"loaded\");\n        }\n        // Dispatches an event every time the Unity Instance progression changes.\n        unityContext.dispatchEvent(\"progress\", progression);\n    }, [progression]);\n    // Effect hook will be called when the Unity Instance threw an error.\n    react_2.useEffect(function () {\n        // If the Unity Instance threw an error, then the error event is\n        // dispatched.\n        if (error !== null) {\n            unityContext.dispatchEvent(\"error\", error);\n        }\n    }, [error]);\n    // Event hook will be called when the component mounts and unmounts.\n    react_2.useEffect(function () {\n        // Each time a component is mounted, the Unity Context identifier is\n        // incremented to ensure that each component is referenced correctly.\n        unityInstanceIdentifier++;\n        return function () {\n            // If the Unity Instance is defined, Quit will be invoked on the Unity\n            // Instance. This removes the Unity Loader and Framework from memory.\n            unityContext === null || unityContext === void 0 ? void 0 : unityContext.quitUnityInstance();\n        };\n    }, []);\n    // Renders the actual canvas element which Unity will use to render.\n    return react_1.createElement(\"canvas\", {\n        // Unity 2021.2 and above requires a unique identifier for each canvas\n        // internally. This is not documented in the Unity documentation, but\n        // it is required for the canvas to be rendered. This is further explained\n        // in https://github.com/jeffreylanters/react-unity-webgl/issues/223.\n        id: \"unity-canvas-\" + unityInstanceIdentifier,\n        // A reference to the canvas element is required to create a Unity Instance.\n        ref: htmlCanvasElement,\n        // Push through of some properties.\n        className: props.className || undefined,\n        style: props.style || {},\n        tabIndex: props.tabIndex || undefined,\n    });\n}\nexports.Unity = Unity;\n//# sourceMappingURL=unity.js.map"]},"metadata":{},"sourceType":"script"}