{"ast":null,"code":"var _jsxFileName = \"/Users/misho/Repos/solaniverse-viewer/src/components/Player/Player.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { Button } from \"@mui/material\";\nimport React, { useState, useEffect } from \"react\";\nimport MusicNoteIcon from '@mui/icons-material/MusicNote';\nimport styles from \"../Player/Player.module.css\"; // @ts-ignore\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useAudio = (url, enabled) => {\n  _s();\n\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(enabled);\n\n  const toggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n    setPlaying(enabled);\n  }, [enabled]);\n  useEffect(() => {\n    playing ? audio.play() : audio.pause();\n  }, [playing]);\n  useEffect(() => {\n    audio.addEventListener('ended', () => setPlaying(false));\n    return () => {\n      audio.removeEventListener('ended', () => setPlaying(false));\n    };\n  }, [audio]);\n  return [playing, toggle];\n}; // @ts-ignore\n\n\n_s(useAudio, \"F3CBYusYvDoA/EpdSilyhP8LTIU=\");\n\nconst Player = ({\n  url,\n  enabled\n}) => {\n  _s2();\n\n  const [playing, toggle] = useAudio(url, enabled);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.audioPlayer,\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggle,\n      variant: \"contained\",\n      endIcon: /*#__PURE__*/_jsxDEV(MusicNoteIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 81\n      }, this),\n      children: \"Toggle sound\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(Player, \"NLLP/wJ33utgrYAxTxhFIM48/kk=\", false, function () {\n  return [useAudio];\n});\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/Users/misho/Repos/solaniverse-viewer/src/components/Player/Player.tsx"],"names":["Button","React","useState","useEffect","MusicNoteIcon","styles","useAudio","url","enabled","audio","Audio","playing","setPlaying","toggle","play","pause","addEventListener","removeEventListener","Player","audioPlayer"],"mappings":";;;;AAAA,SAAQA,MAAR,QAAqB,eAArB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAOC,MAAP,MAAmB,6BAAnB,C,CACA;;;;AACA,MAAMC,QAAQ,GAAG,CAACC,GAAD,EAAMC,OAAN,KAAkB;AAAA;;AAC/B,QAAM,CAACC,KAAD,IAAUP,QAAQ,CAAC,IAAIQ,KAAJ,CAAUH,GAAV,CAAD,CAAxB;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAACM,OAAD,CAAtC;;AAEA,QAAMK,MAAM,GAAG,MAAMD,UAAU,CAAC,CAACD,OAAF,CAA/B;;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACRS,IAAAA,UAAU,CAACJ,OAAD,CAAV;AACH,GAFI,EAGL,CAACA,OAAD,CAHK,CAAT;AAMAL,EAAAA,SAAS,CAAC,MAAM;AACRQ,IAAAA,OAAO,GAAGF,KAAK,CAACK,IAAN,EAAH,GAAkBL,KAAK,CAACM,KAAN,EAAzB;AACH,GAFI,EAGL,CAACJ,OAAD,CAHK,CAAT;AAMAR,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAACO,gBAAN,CAAuB,OAAvB,EAAgC,MAAMJ,UAAU,CAAC,KAAD,CAAhD;AACA,WAAO,MAAM;AACTH,MAAAA,KAAK,CAACQ,mBAAN,CAA0B,OAA1B,EAAmC,MAAML,UAAU,CAAC,KAAD,CAAnD;AACH,KAFD;AAGH,GALQ,EAKN,CAACH,KAAD,CALM,CAAT;AAOA,SAAO,CAACE,OAAD,EAAUE,MAAV,CAAP;AACH,CA1BD,C,CA4BA;;;GA5BMP,Q;;AA6BN,MAAMY,MAAM,GAAG,CAAC;AAACX,EAAAA,GAAD;AAAMC,EAAAA;AAAN,CAAD,KAAoB;AAAA;;AAE/B,QAAM,CAACG,OAAD,EAAUE,MAAV,IAAoBP,QAAQ,CAACC,GAAD,EAAMC,OAAN,CAAlC;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACc,WAAvB;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEN,MAAjB;AAAuC,MAAA,OAAO,EAAC,WAA/C;AAA2D,MAAA,OAAO,eAAE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAZD;;IAAMK,M;UAEwBZ,Q;;;KAFxBY,M;AAcN,eAAeA,MAAf","sourcesContent":["import {Button} from \"@mui/material\";\nimport React, {useState, useEffect} from \"react\";\nimport MusicNoteIcon from '@mui/icons-material/MusicNote';\nimport styles from \"../Player/Player.module.css\";\n// @ts-ignore\nconst useAudio = (url, enabled) => {\n    const [audio] = useState(new Audio(url));\n    const [playing, setPlaying] = useState(enabled);\n\n    const toggle = () => setPlaying(!playing);\n\n    useEffect(() => {\n            setPlaying(enabled);\n        },\n        [enabled]\n    );\n\n    useEffect(() => {\n            playing ? audio.play() : audio.pause();\n        },\n        [playing]\n    );\n\n    useEffect(() => {\n        audio.addEventListener('ended', () => setPlaying(false));\n        return () => {\n            audio.removeEventListener('ended', () => setPlaying(false));\n        };\n    }, [audio]);\n\n    return [playing, toggle];\n};\n\n// @ts-ignore\nconst Player = ({url, enabled}) => {\n\n    const [playing, toggle] = useAudio(url, enabled);\n\n    return (\n        <div className={styles.audioPlayer}>\n            <Button onClick={toggle as () => void} variant=\"contained\" endIcon={<MusicNoteIcon/>}>\n                Toggle sound\n            </Button>\n        </div>\n    );\n\n};\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}